# -*- coding: utf-8 -*-
"""ModelEvaluation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t1GrBa-TRyw2pUJsiJq7HudzHHOPIdLt
"""

import numpy as np
import matplotlib.pyplot as plt
import glob

models = glob.glob("./models/*")
losses = [glob.glob(path + "/*.npy") for path in models if ".p" not in path and "-50" in path]

array = []
for arr in losses:
  loss = np.load(arr[0])

  name = arr[0].split("/")[2]

  array.append({'label': name, 'losses': loss})

for line in array:
  plt.plot(np.arange(0, 50), line['losses'], label = line['label'])

plt.title("Tranformer Model Loss Values over 50 Epochs")
plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.legend(loc='upper center', bbox_to_anchor=(0.5, 1.4),
          ncol=2, fancybox=True, shadow=True)

models = glob.glob("./models/*")
losses = [glob.glob(path + "/*.npy") for path in models if ".p" not in path and "-50" in path and "50.005" not in path]

array = []
for arr in losses:
  loss = np.load(arr[0])

  name = arr[0].split("/")[2]

  array.append({'label': name, 'losses': loss})

for line in array:
  plt.plot(np.arange(0, 50), line['losses'], label = line['label'])

plt.title("Tranformer Model Loss Values over 50 Epochs (No Outlier)")
plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.legend(loc='upper center', bbox_to_anchor=(0.5, 1.4),
          ncol=2, fancybox=True, shadow=True)

for line in array:
  plt.plot(np.arange(0, 50), line['losses'], label = line['label'])

plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.legend(loc='upper center', bbox_to_anchor=(0.5, 1.25),
          ncol=2, fancybox=True, shadow=True)

models = glob.glob("./models/*")
losses = [glob.glob(path + "/*.npy") for path in models if "100" in path]

array = []
for arr in losses:
  loss = np.load(arr[0])

  name = arr[0].split("/")[2]

  array.append({'label': name, 'losses': loss})

for line in array:
  plt.plot(np.arange(0, 100), line['losses'], label = line['label'])

plt.title("Best Models for 100 Epochs")
plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.legend(loc='upper center', bbox_to_anchor=(0.5, 1.2),
          ncol=2, fancybox=True, shadow=True)

models = glob.glob("./models/*")
losses = [glob.glob(path + "/*.npy") for path in models if "200" in path and "Dynamic" not in path]

array = []
for arr in losses:
  loss = np.load(arr[0])

  name = arr[0].split("/")[2]

  array.append({'label': name, 'losses': loss})

for line in array:
  plt.plot(np.arange(0, 200), line['losses'], label = line['label'])

plt.title("Best Models for 200 Epochs")
plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.legend(loc='upper center', bbox_to_anchor=(0.5, 1.19),
          ncol=2, fancybox=True, shadow=True)

models = glob.glob("./models/*")
losses = [glob.glob(path + "/*.npy") for path in models if "200" in path]

models2 = glob.glob("./models/*")
losses2 = [glob.glob(path + "/*.npy") for path in models2 if "250" in path]

array = []
for arr in losses:
  loss = np.load(arr[0])

  name = arr[0].split("/")[2]

  array.append({'label': name, 'losses': loss})

array2 = []
for arr in losses2:
  loss = np.load(arr[0])

  name = arr[0].split("/")[2]

  array2.append({'label': name, 'losses': loss})

for line in array:
  plt.plot(np.arange(0, 200), line['losses'], label = line['label'])

for line in array2:
  plt.plot(np.arange(0, 250), line['losses'], label = line['label'])

plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.legend(loc='upper center', bbox_to_anchor=(0.5, 1.19),
          ncol=2, fancybox=True, shadow=True)